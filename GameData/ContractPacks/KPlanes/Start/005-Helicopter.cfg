//GAP-Helicopter - GAP: Land on a helipad!

CONTRACT_TYPE
{

	sortKey = a7

//REQUIREMENTS FOR CONTRACT TO APPEAR

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		
		contractType = Wright-Speed220
		minCount = 1

	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		
		contractType = Wright-5000m
		minCount = 1

	}
	
	REQUIREMENT
	{
		name = Any
		type = Any
		
		REQUIREMENT
		{
			name = Facility
			type = Facility
			
			facility = VehicleAssemblyBuilding		
			minLevel = 2
			
		}
		
		REQUIREMENT
		{
			name = Facility
			type = Facility
			
			facility = Administration		
			minLevel = 3
			
		}

	}
	
	
//DATA NODES TO PROCESS FOR CONTRACT USE

//Contract Specific VesselParameterGroup Definition Key (to prevent conflict with other active contracts)
	DATA
	{
		type = string
		
		craft = GAPcraftGAPHelicopter
		
	}


//CONTRACT DESCRIPTION
	name = GAP-Helicopter
	title = Land on a helipad!
	group = GAP
	agent = Giving Aircraft a Purpose

	description = We want you to test your first helicopter or Vertical Take-Off and Landing (VTOL) prototype. Land on one of the available helipads.

	synopsis = For science (and a few funds)!

	notes = Make a helicopter or VTOL and land on a VAB or Administration Building helipad!

	completedMessage = Flight Completed! And you're still alive, which is even better since most helicopter and other VTOL test flights have been fatal.

//Contract Limits
   	maxCompletions = 1
   	maxSimultaneous = 1
//	weight = 10.0
	
	autoAccept = false
	declinable = true
	cancellable = true

	minExpiry = 7.0
	maxExpiry = 7.0
	deadline = 0

//Contract Reward Modifiers	
	prestige = Trivial
   	targetBody = Kerbin

//Contract Rewards
  	advanceFunds = 5000
  	rewardFunds = 30000.0
  	rewardReputation = 10.0
 	rewardScience = 10.0

//Contract Penalties	
  	failureFunds = 10000.0
 	failureReputation = 5.0
	

//BEHAVIOURS TO DO WHEN CREATING CONTRACT
	
	BEHAVIOUR
	{
		name = AwardExperience
		type = AwardExperience
		
		parameter = GAPLand
		experience = 1
		
	}

	
//PARAMETERS FOR CONTRACT COMPLETION

//Craft definition
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = Your aircraft must
		
		define = @/craft
		dissassociateVesselsOnContractCompletion = true

		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = have a certified pilot
			
			trait = Pilot
			minCrew = 1
		
			disableOnStateChange = false
			hideChildren = true

		}
		
		disableOnStateChange = false

	}
	
//Recovery Parameter - Landing
	PARAMETER
	{
		name = GAPLand
		type = Any
		title = land on a helipad
		
		PARAMETER
		{
			name = Any
			type = Any
			title = at either
			
			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = the Vehicle Assembly Building Helipad
				
				vessel = @/craft

			PARAMETER
				{
					name = ReachState
					type = ReachState
					
					targetBody = Kerbin
					biome = VAB Main Building
					situation = LANDED
					maxSpeed = 0.0

					disableOnStateChange = false
					hideChildren = true

				}
				
				disableOnStateChange = false
				hideChildren = true		

			}
			
			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = or the Administration Building Helipad
				
				vessel = @/craft

				PARAMETER
				{
					name = ReachState
					type = ReachState

					targetBody = Kerbin
					biome = Administration	
					situation = LANDED
					maxSpeed = 0.0
					
					disableOnStateChange = false
					hideChildren = true
					
				}

				disableOnStateChange = false
				hideChildren = true

			}
		
			disableOnStateChange = false
		
		}
		
		completeInSequence = true
		disableOnStateChange = false

	}

//Recovery Parameter - Craft & Kerbal Safety Check
	PARAMETER
	{
		name = All
		type = All
		title = safely
		
		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying your aircraft
			
			vessel = @/craft

		}
		
		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = or killing anyone
			
			vessel = @/craft

		}
		
		completeInSequence = true
		disableOnStateChange = true
		
	}
	
}