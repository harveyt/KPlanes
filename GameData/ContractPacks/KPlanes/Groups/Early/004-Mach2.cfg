// -*- conf-javaprop -*-
//
// Copied and modified from GAP/SSI-Mach2.cfg
//
// **** WARNING: DO NOT EDIT THIS FILE! Change ContractTable.csv and/or ContractGen.py ****
//

CONTRACT_TYPE
{

	sortKey = a004

//REQUIREMENTS FOR CONTRACT TO APPEAR

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract

		contractType = Early-002-Mach1
		minCount = 1

	}


//DATA NODES TO PROCESS FOR CONTRACT USE

//Contract Specific VesselParameterGroup Definition Key (to prevent conflict with other active contracts)
	DATA
	{
		type = string

		craft = KPlanesCraft_Early_004

	}

	DATA
	{
		type = double
		AltMin = Round(@KPlanes:TroposphereLow * 1000.0)
		ScaledAltMin = Round(@/AltMin / 1000.0)
		title = Minimum altitude
	}

	DATA
	{
		type = string
		DescAltMin = " (Troposphere Low)"
		title = Minimum altitude
	}

	DATA
	{
		type = string
		PrettyAltMin = @/ScaledAltMin.ToString("#,# km")
		title = Minimum altitude
	}

	DATA
	{
		type = double
		AltMax = Round(@KPlanes:StratosphereHigh * 1000.0)
		ScaledAltMax = Round(@/AltMax / 1000.0)
		title = Maximum altitude
	}

	DATA
	{
		type = string
		DescAltMax = " (Stratosphere High)"
		title = Maximum altitude
	}

	DATA
	{
		type = string
		PrettyAltMax = @/ScaledAltMax.ToString("#,# km")
		title = Maximum altitude
	}

	DATA
	{
		type = string
		PrettyAltRange = altitude between @/PrettyAltMin@/DescAltMin and @/PrettyAltMax@/DescAltMax
		title = Range for altitude 
	}

	DATA
	{
		type = double
		Speed = Round(@KPlanes:Mach2 * 1.0)
		ScaledSpeed = Round(@/Speed / 1.0)
		title = Speed
	}

	DATA
	{
		type = string
		DescSpeed = " (Mach2)"
		title = Speed
	}

	DATA
	{
		type = string
		PrettySpeed = @/ScaledSpeed.ToString("#,# m/s")
		title = Speed
	}

	DATA
	{
		type = string
		PrettySpeedRange = speed of at least @/PrettySpeed@/DescSpeed
		title = Range for speed 
	}

//CONTRACT DESCRIPTION

	name = Early-004-Mach2
	title = #autoLOC_KPlanes_Early_004_Mach2_title
	group = KPlanes_Early
	agent = KACA

	description = #autoLOC_KPlanes_Early_004_Mach2_description

	synopsis = #autoLOC_KPlanes_Early_004_Mach2_synopsis

	notes = #autoLOC_KPlanes_Early_004_Mach2_notes

	completedMessage = #autoLOC_KPlanes_Early_004_Mach2_completedMessage

//Contract Limits
	maxCompletions = 1
	maxSimultaneous = 1
//	weight = 100.0

	autoAccept = false
	declinable = true
	cancellable = true

	minExpiry = 0.0
	maxExpiry = 0.0
	deadline = 0

//Contract Reward Modifiers
	prestige = Significant
	targetBody = HomeWorld()

//Contract Rewards
	advanceFunds = 47 * @KPlanes:RewardAdvanceFunds
	rewardFunds = 47 * @KPlanes:RewardFunds
	rewardReputation = 25 * @KPlanes:RewardReputation
	rewardScience = 10 * @KPlanes:RewardScience

//Contract Penalties
	failureFunds = 47 * @KPlanes:FailureFunds
	failureReputation = 25 * @KPlanes:FailureReputation


//PARAMETERS FOR CONTRACT COMPLETION

//Craft definition
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = Your aircraft must

		define = @/craft
		dissassociateVesselsOnContractCompletion = true

		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = have a certified pilot

			trait = Pilot
			minCrew = 1

			disableOnStateChange = false
			hideChildren = true

		}

		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			title = have wings

			category = Aero

			disableOnStateChange = false
			hideChildren = true

		}

		PARAMETER
		{
			name = All
			type = All
			title = have air breathing engines and/or rockets

			PARAMETER
			{
				name = PartValidation
				type = PartValidation
				title = not have any solid rocket engines

				NONE
				{
					MODULE
					{
						EngineType = SolidBooster

					}

				}

				disableOnStateChange = false
				hideChildren = true

			}

			disableOnStateChange = false

		}

		disableOnStateChange = false

	}

//Contract Goals
	PARAMETER
	{
		name = All
		type = All
		title = achieve a maximum airspeed of @/PrettySpeed

		PARAMETER
		{
			name = VesselParameterGroup
			type = VesselParameterGroup
			title = fly at an @/PrettyAltRange
	
			vessel = @/craft
	
			PARAMETER
			{
				name = ReachState
				type = ReachState
	
				targetBody = HomeWorld()
				situation = FLYING
				minAltitude = @/AltMin
				maxAltitude = @/AltMax
	
				disableOnStateChange = false
				hideChildren = true
				hidden = true
	
			}
	
			completeInSequence = false
			disableOnStateChange = false
			hideChildren = true
	
		}
	
		PARAMETER
		{
			name = VesselParameterGroup
			type = VesselParameterGroup
			title = fly faster than @/PrettySpeed
	
			vessel = @/craft
	
			PARAMETER
			{
				name = ReachState
				type = ReachState
	
				targetBody = HomeWorld()
				situation = FLYING
				minSpeed = @/Speed
	
				disableOnStateChange = false
				hideChildren = true
				hidden = true
	
			}
	
			completeInSequence = false
			disableOnStateChange = false
			hideChildren = true
	
		}
	
		PARAMETER
		{
			name = VesselParameterGroup
			type = VesselParameterGroup
			title = with less than 10 m/s of vertical speed
	
			vessel = @/craft
	
			PARAMETER
			{
				name = ReachState
				type = ReachState
	
				targetBody = HomeWorld()
				situation = FLYING
				minRateOfClimb = -10
				maxRateOfClimb = 10
	
				disableOnStateChange = false
				hideChildren = true
				hidden = true
	
			}
	
			completeInSequence = true
			disableOnStateChange = false
			hideChildren = true
	
		}
	
		PARAMETER
		{
			name = Duration
			type = Duration
	
			duration = 5s
			preWaitText = and hold for:
			waitingText = and hold for: 
			completionText = You did it!
	
			completeInSequence = true
			disableOnStateChange = false
	
		}
	
	
		completeInSequence = true
		disableOnStateChange = true
	
	}

//Recovery Parameter - Landing
	PARAMETER
	{
		name = Any
		type = Any
		title = and then land and stop

		PARAMETER
		{
			name = Any
			type = Any
			title = at one of the following recovery areas

			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = the KSC Runway

				vessel = @/craft

			PARAMETER
				{
					name = ReachState
					type = ReachState

					targetBody = HomeWorld()
					biome = Runway
					situation = LANDED
					maxSpeed = 0.0

					disableOnStateChange = false
					hideChildren = true

				}

				disableOnStateChange = false
				hideChildren = true		

			}

			PARAMETER
			{
				name = VesselParameterGroup
				type = VesselParameterGroup
				title = or the Spaceplane Hangar Air Terminal

				vessel = @/craft

			PARAMETER
				{
					name = ReachState
					type = ReachState

					targetBody = HomeWorld()
					biome = SPH
					situation = LANDED
					maxSpeed = 0.0

					disableOnStateChange = false
					hideChildren = true

				}

				disableOnStateChange = false
				hideChildren = true		

			}

			disableOnStateChange = false

		}

		completeInSequence = true
		disableOnStateChange = false

	}

//Recovery Parameter - Craft & Kerbal Safety Check
	PARAMETER
	{
		name = All
		type = All
		title = safely

		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying your aircraft

			vessel = @/craft

		}

		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = or killing anyone

			vessel = @/craft

		}

		completeInSequence = true
		disableOnStateChange = true

	}

}
