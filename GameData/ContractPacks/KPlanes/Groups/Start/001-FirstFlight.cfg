// -*- conf-javaprop -*-
//
// Copied and modified from GAP/Wright-FirstFlight.cfg

CONTRACT_TYPE
{

	sortKey = a001

//REQUIREMENTS FOR CONTRACT TO APPEAR

	REQUIREMENT
	{
		name = Any
		type = Any

		REQUIREMENT
		{
			name = PartModuleUnlocked
			type = PartModuleUnlocked

			partModule = ModuleControlSurface

		}

		REQUIREMENT:NEEDS[AtmosphereAutopilot]
		{
			name = PartModuleUnlocked
			type = PartModuleUnlocked
			partModule = SyncModuleControlSurface
		}

		REQUIREMENT:NEEDS[FerramAerospaceResearch]
		{
			name = PartModuleUnlocked
			type = PartModuleUnlocked

			partModule = FARControllableSurface

		}

		REQUIREMENT:NEEDS[Firespitter]
		{
			name = PartModuleUnlocked
			type = PartModuleUnlocked

			partModule = FSliftSurface

		}

		REQUIREMENT:NEEDS[Firespitter]
		{
			name = PartModuleUnlocked
			type = PartModuleUnlocked

			partModule = FSwing

		}

	}

	REQUIREMENT
	{
		name = Any
		type = Any

		REQUIREMENT
		{
			name = PartModuleUnlocked
			type = PartModuleUnlocked

			partModule = ModuleResourceIntake
		}

		REQUIREMENT:NEEDS[AJE]
		{
		    name = PartModuleUnlocked
		    type = PartModuleUnlocked

		    partModule = AJEInlet
		}
	}

//DATA NODES TO PROCESS FOR CONTRACT USE

//Contract Specific VesselParameterGroup Definition Key (to prevent conflict with other active contracts)
	DATA
	{
		type = string

		craft = KPlanesCraft_Start_001

	}

//CONTRACT DESCRIPTION

	name = Start-001-FirstFlight
	title = #autoLOC_KPlanes_Start_001_FirstFlight_title
	group = KPlanes_Start
	agent = KPlanes_Wright

	description = #autoLOC_KPlanes_Start_001_FirstFlight_description

	synopsis = #autoLOC_KPlanes_Start_001_FirstFlight_synopsis

	notes = #autoLOC_KPlanes_Start_001_FirstFlight_notes

	completedMessage = #autoLOC_KPlanes_Start_001_FirstFlight_completedMessage

//Contract Limits
   	maxCompletions = 1
   	maxSimultaneous = 1
//	weight = 100.0

	autoAccept = false
	declinable = true
	cancellable = true

	minExpiry = 7.0
	maxExpiry = 7.0
	deadline = 0

//Contract Reward Modifiers
	prestige = Trivial
   	targetBody = HomeWorld()

//Contract Rewards
  	advanceFunds = 2 * @KPlanes:RewardAdvanceFunds
  	rewardFunds = 2 * @KPlanes:RewardFunds
  	rewardReputation = 2 * @KPlanes:RewardReputation
 	rewardScience = 2 * @KPlanes:RewardScience

//Contract Penalties
  	failureFunds = 2 * @KPlanes:FailureFunds
 	failureReputation = 2 * @KPlanes:FailureReputation


//BEHAVIOURS TO DO WHEN CREATING CONTRACT
	BEHAVIOUR
	{
		name = AwardExperience
		type = AwardExperience

		parameter = WrightLand
		experience = 1

	}


//PARAMETERS FOR CONTRACT COMPLETION

//Craft definition
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = Your flying machine must

		define = @/craft
		dissassociateVesselsOnContractCompletion = true

		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = have a volunteer

			minCrew = 1

			disableOnStateChange = false
			hideChildren = true

		}

		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			title = have wings

			category = Aero

			disableOnStateChange = false
			hideChildren = true

		}

		PARAMETER
		{
			name = All
			type = All
			title = have an air breathing engine only

			PARAMETER
			{
				name = PartValidation
				type = PartValidation
				title = not have any solid rocket engines

				NONE
				{
					MODULE
					{
						EngineType = SolidBooster

					}

				}

				disableOnStateChange = false
				hideChildren = true

			}

			PARAMETER
			{
				name = PartValidation
				type = PartValidation
				title = not have any liquid rocket engines

				NONE
				{
					MODULE
					{
						EngineType = LiquidFuel

					}

				}

				disableOnStateChange = false
				hideChildren = true

			}


			PARAMETER
			{
				name = HasResource
				type = HasResource
				title = not have any solid rocket fuel

				resource = SolidFuel				
				minQuantity = 0.0
				maxQuantity = 0.0

				disableOnStateChange = false
				hideChildren = true

			}

			PARAMETER
			{
				name = HasResource
				type = HasResource
				title = not have any oxidizer

				resource = Oxidizer				
				minQuantity = 0.0
				maxQuantity = 0.0

				disableOnStateChange = false
				hideChildren = true

			}

			disableOnStateChange = false

		}

		disableOnStateChange = false

	}

//Contract Goals
	PARAMETER
	{
		name = VesselParameterGroup
		type = VesselParameterGroup
		title = get airborne

		vessel = @/craft

		PARAMETER
		{
			name = ReachState
			type = ReachState

			targetBody = HomeWorld()
			situation = FLYING
			minSpeed = 15

			completeInSequence = true
			disableOnStateChange = true
			hideChildren = true

		}

		completeInSequence = true
		hideChildren = true

	}

//Recovery Parameter - Landing
	PARAMETER
	{
		name = WrightLand
		type = VesselParameterGroup
		title = and then land and stop anywhere

		vessel = @/craft

		PARAMETER
		{
			name = ReachState
			type = ReachState

			targetBody = HomeWorld()
			situation = LANDED
			maxSpeed = 0.0

			disableOnStateChange = false
			hideChildren = true

		}

		completeInSequence = true
		hideChildren = true

	}

//Recovery Parameter - Craft & Kerbal Safety Check
	PARAMETER
	{
		name = All
		type = All
		title = safely

		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			title = without destroying your flying machine

			vessel = @/craft

		}

		PARAMETER
		{
			name = KerbalDeaths
			type = KerbalDeaths
			title = or killing anyone

			vessel = @/craft

		}

		completeInSequence = true
		disableOnStateChange = true

	}

}
